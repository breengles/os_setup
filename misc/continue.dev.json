{
  "models": [
    {
      "title": "DeepSeek Chat",
      "provider": "deepseek",
      "model": "deepseek-chat",
      "contextLength": 128000,
      "apiKey": ""
    },
    {
      "title": "DeepSeek Reasoner",
      "provider": "deepseek",
      "model": "deepseek-reasoner",
      "contextLength": 128000,
      "apiKey": ""
    },
    {
      "model": "gpt-4o",
      "contextLength": 128000,
      "title": "GPT-4o",
      "provider": "openai",
      "apiKey": ""
    },
    {
      "title": "qwen2.5-coder:32b",
      "model": "qwen2.5-coder:32b",
      "contextLength": 16384,
      "provider": "ollama"
    },
    {
      "title": "deepseek-r1:32b",
      "model": "deepseek-r1:32b",
      "contextLength": 16384,
      "provider": "ollama"
    }
  ],
  // "tabAutocompleteModel": {
  //   "title": "starcoder2:3b",
  //   "model": "starcoder2:3b",
  //   "provider": "ollama"
  // },
  // "tabAutocompleteModel": {
  //   "title": "qwen2.5-coder:3b",
  //   "model": "qwen2.5-coder:3b",
  //   "provider": "ollama"
  // },
  // "tabAutocompleteModel": {
  //   "title": "DeepSeek Coder",
  //   "provider": "deepseek",
  //   "model": "deepseek-coder",
  //   "apiKey": ""
  // },
  "tabAutocompleteModel": [
    {
      "title": "DeepSeek",
      "model": "deepseek-coder",
      "apiKey": "",
      "provider": "deepseek"
      // "apiBase": "https://api.deepseek.com/beta"
    },
    {
      "title": "starcoder2:3b",
      "model": "starcoder2:3b",
      "provider": "ollama"
    },
    {
      "title": "qwen2.5-coder:3b",
      "model": "qwen2.5-coder:3b",
      "provider": "ollama"
    }
  ],
  "tabAutocompleteOptions": {
    "debounceDelay": 250,
    "multilineCompletions": "auto"
  },
  "customCommands": [
    {
      "name": "docstrings",
      "prompt": "You will be acting as a senior software engineer helping a colleague document their code. You will follow the guidelines for writing great code comments:\nRule 1: Comments should not duplicate the code.\nRule 2: Good comments do not excuse unclear code.\nRule 3: If you can't write a clear comment, there may be a problem with the code.\nRule 4: Comments should dispel confusion, not cause it.\nRule 5: Explain unidiomatic code in comments.\nRule 6: Provide links to the original source of copied code.\nRule 7: Add comments when fixing bugs.\nRule 8: Use comments to mark incomplete implementations.\nDo not mention in your answer the rules\n.\nUsing this information, add docstrings, and simple comments if needed, the following code:\n\n{{{ input }}}",
      "description": "Add docstrings"
    }
  ],
  "contextProviders": [
    {
      "name": "code",
      "params": {}
    },
    {
      "name": "docs",
      "params": {}
    },
    {
      "name": "diff",
      "params": {}
    },
    {
      "name": "terminal",
      "params": {}
    },
    {
      "name": "problems",
      "params": {}
    },
    {
      "name": "folder",
      "params": {}
    },
    {
      "name": "codebase",
      "params": {}
    }
  ],
  "slashCommands": [
    {
      "name": "edit",
      "description": "Edit selected code"
    },
    {
      "name": "comment",
      "description": "Write comments for the selected code"
    },
    {
      "name": "share",
      "description": "Export the current chat session to markdown"
    },
    {
      "name": "cmd",
      "description": "Generate a shell command"
    },
    {
      "name": "commit",
      "description": "Generate a git commit message"
    }
  ],
  "embeddingsProvider": {
    "provider": "free-trial"
  },
  "reranker": {
    "name": "free-trial"
  }
}