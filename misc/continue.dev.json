{
  "models": [
    {
      "model": "gpt-4o",
      "contextLength": 128000,
      "title": "GPT-4o",
      "systemMessage": "You are an expert software developer. You give helpful and concise responses.",
      "provider": "openai",
      "apiKey": ""
    },
    {
      "title": "Gemini 1.5 Flash 8B",
      "provider": "gemini",
      "model": "gemini-1.5-flash-8b",
      "apiKey": ""
    },
    {
      "title": "llama3.1:8b",
      "model": "llama3.1:8b",
      "contextLength": 32768,
      "provider": "ollama"
    },
    {
      "title": "llama3.2:3b",
      "model": "llama3.2:3b",
      "contextLength": 32768,
      "provider": "ollama"
    },
    {
      "title": "yi-coder:9b",
      "model": "yi-coder:9b",
      "contextLength": 32768,
      "provider": "ollama"
    },
    {
      "title": "codeqwen:7b-chat",
      "model": "codeqwen:7b-chat",
      "contextLength": 32768,
      "provider": "ollama"
    },
    {
      "title": "deepseek-coder-v2:16b",
      "model": "deepseek-coder-v2:16b",
      "contextLength": 32768,
      "provider": "ollama"
    }
  ],
  "tabAutocompleteModel": {
    "title": "StarCoder2-3b",
    "model": "starcoder2:3b",
    "provider": "ollama"
  },
  "tabAutocompleteOptions": {
    "debounceDelay": 500,
    "multilineCompletions": "always"
  },
  "customCommands": [
    {
      "name": "docstrings",
      "prompt": "You will be acting as a senior software engineer helping a colleague document their code. You will follow the guidelines for writing great code comments:\nRule 1: Comments should not duplicate the code.\nRule 2: Good comments do not excuse unclear code.\nRule 3: If you can't write a clear comment, there may be a problem with the code.\nRule 4: Comments should dispel confusion, not cause it.\nRule 5: Explain unidiomatic code in comments.\nRule 6: Provide links to the original source of copied code.\nRule 7: Add comments when fixing bugs.\nRule 8: Use comments to mark incomplete implementations.\nDo not mention in your answer the rules\n.\nUsing this information, add docstrings, and simple comments if needed, the following code:\n\n{{{ input }}}",
      "description": "Add docstrings"
    }
  ],
  "contextProviders": [
    {
      "name": "code",
      "params": {}
    },
    {
      "name": "docs",
      "params": {}
    },
    {
      "name": "diff",
      "params": {}
    },
    {
      "name": "terminal",
      "params": {}
    },
    {
      "name": "problems",
      "params": {}
    },
    {
      "name": "folder",
      "params": {}
    },
    {
      "name": "codebase",
      "params": {}
    }
  ],
  "slashCommands": [
    {
      "name": "edit",
      "description": "Edit selected code"
    },
    {
      "name": "comment",
      "description": "Write comments for the selected code"
    },
    {
      "name": "share",
      "description": "Export the current chat session to markdown"
    },
    {
      "name": "cmd",
      "description": "Generate a shell command"
    },
    {
      "name": "commit",
      "description": "Generate a git commit message"
    }
  ]
}